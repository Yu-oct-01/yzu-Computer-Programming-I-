#include<iostream>
using namespace std;

// returns the sum of the k-th powers of digits of n,
// where k is the number of digits of n.
int sumPowerDigits( int n );

// returns the k-th power of d, where k is the number of digits of n.
int power( int d );

int numDigits;// the number of digits of n, i.e., k in the above comments

int main()
{
   int numCases;
   cin >> numCases;
   for( int i = 1; i <= numCases; i++ )
   {
      int n;
      cin >> n;

      numDigits = 0;// the number of digits of n
      for( int i = n; i > 0; i /= 10 )
         numDigits++;

      if( n == sumPowerDigits( n ) )
         cout << "Armstrong" << endl;
      else
         cout << "Not Armstrong" << endl;
   }
}

int sumPowerDigits( int n )
{
   int sum=0;
   for( int i = n; i > 0; i /= 10 )
         sum += power(i%10);
   return sum;
}

int power( int d )
{
   int temp=1;
   for(int i=0; i<numDigits; i++)
      temp *= d;
   return temp;
}

// Polynomial addition
#include <iostream>
using namespace std;

// sum = addend + adder
void addition( long long int *addendCoef, long long int *addendExpon, int addendSize,
               long long int *adderCoef, long long int *adderExpon, int adderSize,
               long long int *&sumCoef, long long int *&sumExpon, int &sumSize );

// outputs the specified polynomial
void output( long long int *coefficient, long long int *exponent, int size );

int main()
{
   int T;
   cin >> T;
   for( int t = 0; t < T; t++ )
   {
      int addendSize;
      cin >> addendSize;
      long long int *addendCoef = new long long int[ addendSize ];
      long long int *addendExpon = new long long int[ addendSize ];
      for( int i = addendSize - 1; i >= 0; i-- )
         cin >> addendCoef[ i ];
      for( int i = addendSize - 1; i >= 0; i-- )
         cin >> addendExpon[ i ];

      int adderSize;     
      cin >> adderSize;
      long long int *adderCoef = new long long int[ adderSize ];
      long long int *adderExpon = new long long int[ adderSize ];
      for( int i = adderSize - 1; i >= 0; i-- )
         cin >> adderCoef[ i ];
      for( int i = adderSize - 1; i >= 0; i-- )
         cin >> adderExpon[ i ];

      int sumSize;
      long long int *sumCoef;
      long long int *sumExpon;
      addition( addendCoef, addendExpon, addendSize,
                adderCoef, adderExpon, adderSize,
                sumCoef, sumExpon, sumSize );

      output( sumCoef, sumExpon, sumSize );

      delete[] addendCoef;
      delete[] addendExpon;
      delete[] adderCoef;
      delete[] adderExpon;
      delete[] sumCoef;
      delete[] sumExpon;
   }
}

// sum = addend + adder
void addition( long long int *addendCoef, long long int *addendExpon, int addendSize,
               long long int *adderCoef, long long int *adderExpon, int adderSize,
               long long int *&sumCoef, long long int *&sumExpon, int &sumSize )
{
    sumSize=addendSize+adderSize;
    sumCoef=new long long int [sumSize];
    sumExpon=new long long int [sumSize];
    int i=0, j=0, k=0;
    while(i<addendSize && j<adderSize)//比較次方大小後放入
    {
        if(addendExpon[i]<adderExpon[j])
        {
            sumExpon[k]=addendExpon[i];
            sumCoef[k]=addendCoef[i];
            i++;k++;
        }
        else if(addendExpon[i]>adderExpon[j])
        {
            sumExpon[k]=adderExpon[j];
            sumCoef[k]=adderCoef[j];
            j++;k++;
        }
        else if(addendExpon[i] == adderExpon[j])
        {
            sumCoef[k]=addendCoef[i] + adderCoef[j];
            if(sumCoef[k] != 0)
            {
                sumExpon[k]=adderExpon[i];
                k++;
            }
            i++;j++;
        }
    }

    if(i<addendSize)//放入沒比完的
    {
        for(; i<addendSize; i++)
        {
            sumExpon[k]=addendExpon[i];
            sumCoef[k]=addendCoef[i];
            k++;
        }
    }
    else if(j<adderSize)
    {
        for(; j<adderSize; j++)
        {
            sumExpon[k]=adderExpon[j];
            sumCoef[k]=adderCoef[j];
            k++;
        }
    }

    for(int x=sumSize-1; x>=0; x--)//處理和的大小
    {
        if(sumExpon[x]!=0 && sumCoef[x]!=0)
        {
            sumSize=x+1;
            break;
        }
        else if(x==0 && sumExpon[x]==0 && sumCoef[x]==0)
            sumSize=1;
    }
}

// outputs the specified polynomial
void output( long long int *coefficient, long long int *exponent, int size )
{
   cout << size << endl;
   cout << coefficient[ size - 1 ];
   for( int i = size - 2; i >= 0; i-- )
      cout << " " << coefficient[ i ];
   cout << endl;

   cout << exponent[ size - 1 ];
   for( int i = size - 2; i >= 0; i-- )
      cout << " " << exponent[ i ];
   cout << endl;
}
